@using Domain.Interfaces;
@using Domain.AresApiModels;
@using Domain.ServiceInterfaces;
@inject IAresApiService aresApiService;

@* TODO: make the ares api window as an independent component *@

<div class="">
    @* ARES API WINDOW *@
    <div class="border border-primary rounded bg-gradient p-2 mb-4 d-flex justify-content-center">
        <div class="d-flex flex-column gap-4 text-center align-items-center">
            <h4 class="text-primary m-auto">Enter the ICO of the Entity</h4>
            <input type="number" class="form-control" placeholder="Enter ICO..." @bind="userInputIco" />
            <button class="btn btn-success w-50" @onclick="FillInAresData">Fill In</button>
            @if (!string.IsNullOrEmpty(aresApiErrorMessage)) 
            {
                <p class="text-danger m-auto">@aresApiErrorMessage</p>
            }
        </div>
    </div>
    @* ENTITY FORM *@
    <form>
        <div class="row mb-4">
            <div class="col">
                <label for="entity-name" class="font-weight-bold">Name</label>
                <input type="text" class="form-control" id="entity-name" placeholder="Enter Name" @bind="entityName" />
            </div>
            <div class="col">
                <label for="entity-ico" class="font-weight-bold">ICO</label>
                <input type="number" class="form-control" id="entity-ico" placeholder="Enter ICO" @bind="entityIco" />
            </div>
        </div>
        <div class="row">
            <div class="col">
                <label for="entity-email" class="font-weight-bold">Email Address</label>
                <input type="email" class="form-control" id="entity-email" placeholder="Enter Email" @bind="entityEmail" />
            </div>
            <div class="col">
                <label for="entity-phone" class="font-weight-bold">Phone Number</label>
                <input type="tel" class="form-control" id="entity-phone" placeholder="Enter Phone Number" @bind="entityPhone" />
            </div>
        </div>
        <hr/>
        @* ADDRESS FORM *@
        <div class="row mb-4">
            <div class="col">
                <label for="address-street" class="font-weight-bold">Street And Number</label>
                <input type="text" class="form-control" id="address-street" placeholder="Street And Number" @bind="entityAddressStreet" />
            </div>
            <div class="col">
                <label for="address-zipcode" class="font-weight-bold">Zip Code</label>
                <input type="number" class="form-control" id="address-zipcode" placeholder="Zip Code" @bind="entityAddressZipCode" />
            </div>
        </div>
        <div class="row mb-4">
            <div class="col">
                <label for="address-city" class="font-weight-bold">City</label>
                <input type="text" class="form-control" id="address-city" placeholder="City" @bind="entityAddressCity" />
            </div>
            <div class="col">
                <label for="address-country" class="font-weight-bold">Country</label>
                <input type="text" class="form-control" id="address-country" placeholder="Country" @bind="entityAddressCountry" />
            </div>
        </div>
        @* BANK ACCOUNT FORM*@
        <button type="submit" class="btn btn-primary float-end">Submit</button>
    </form>
</div>

@code {
    // For ARES API call
    private string userInputIco { get; set; } = string.Empty;
    private string aresApiErrorMessage { get; set; } = string.Empty;

    // Fields for the form
    private string entityIco { get; set; } = string.Empty;
    private string entityName { get; set; } = string.Empty;
    private string entityEmail { get; set; } = string.Empty;
    private string entityPhone { get; set; } = string.Empty;
    private string entityAddressStreet { get; set; } = string.Empty;
    private int? entityAddressZipCode { get; set; } = null;
    private string entityAddressCity { get; set; } = string.Empty;
    private string entityAddressCountry { get; set; } = string.Empty;

    private async void FillInAresData()
    {
        try 
        {
            if (string.IsNullOrWhiteSpace(userInputIco))
            {
                aresApiErrorMessage = "No Ico Provided";
                return;
            }
            var response = await aresApiService.GetEntityInformationByIcoAsync(userInputIco);
            switch (response.IsSuccess)
            {
                case true:
                    SubjectInformation data = (SubjectInformation)response.Data!;
                    FillInForm(data);
                    break;
                case false:
                    AresApiErrorResponse errorData = (AresApiErrorResponse)response.Data!;
                    aresApiErrorMessage = errorData.Popis;
                    break;
            }
        }
        catch (Exception e)
        {
            aresApiErrorMessage = e.Message;
        } 
        finally 
        {
            StateHasChanged();
        }
    }

    private void FillInForm(SubjectInformation newData)
    {
        // Clear the error message
        aresApiErrorMessage = string.Empty;
        // Populate the form
        entityIco = newData.ico!;
        entityName = newData.obchodniJmeno!;
        entityAddressStreet = newData.sidlo!.nazevUlice + newData.sidlo.cisloDomovni;
        entityAddressZipCode = newData.sidlo.psc;
        entityAddressCity = newData.sidlo.nazevObce!;
        entityAddressCountry = newData.sidlo.nazevStatu!;
    }
}