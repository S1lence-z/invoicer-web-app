@using Domain.Models;

<div class="card border-1 shadow-sm @(IsSelected ? "border border-primary" : "")">
    <div class="card-body" style="cursor: pointer;" @onclick="() => OnSelectEntity.InvokeAsync(Entity)">
        <h5 class="card-title mb-2">@Entity.Name</h5>
        
        <p class="mb-1">
            <span class="fw-bold">Bank:</span> 
            <span class="text-muted">@Entity.BankAccount!.BankName (@Entity.BankAccount.AccountNumber/@Entity.BankAccount.BankCode)</span>
        </p>
        
        <p class="mb-0">
            <span class="fw-bold">Address:</span> 
            <span class="text-muted">@Entity.Address!.Street, @Entity.Address.City</span>
        </p>
    </div>

    <div class="card-footer bg-white border-0 d-flex gap-2">
        <button class="btn btn-outline-primary btn-sm" @onclick="() => OnEditEntity.InvokeAsync(Entity)">Edit</button>
        <button class="btn btn-outline-danger btn-sm" @onclick="() => OnDeleteEntity.InvokeAsync(Entity)">Delete</button>
    </div>
</div>

@code {
    [Parameter, EditorRequired] 
    public Entity Entity { get; set; } = null!;

    [Parameter] 
    public EventCallback<Entity> OnSelectEntity { get; set; }

    [Parameter] 
    public EventCallback<Entity> OnDeleteEntity { get; set; }

    [Parameter] 
    public EventCallback<Entity> OnEditEntity { get; set; }

    [Parameter]
    public bool IsSelected { get; set; }
}
