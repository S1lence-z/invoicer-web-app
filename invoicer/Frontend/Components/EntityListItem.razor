@using Application.DTOs
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<EntityListItem> L

@* Entity Card *@
<div class="list-group-item list-group-item-action border @(IsSelected ? "border-primary" : "") p-3" @onclick="() => OnSelectEntity.InvokeAsync(Entity)" style="cursor: pointer; max-width: 350px;">
    <div class="d-flex w-100 justify-content-between">
        <h6 class="mb-1">@Entity.Name</h6>
        <small><span class="badge bg-secondary ms-2">@(Entity.IsClient ? @L["ClientLabel"] : @L["MeLabel"])</span></small>
    </div>
    <small class="mb-1 d-block text-muted">@L["BankLabel"] @Entity.BankAccount?.BankName (@Entity.BankAccount?.AccountNumber/@Entity.BankAccount?.BankCode)</small>
    <small class="text-muted d-block">@L["AddressLabel"] @Entity.Address?.Street, @Entity.Address?.City</small>
    <div class="mt-2 pt-2 border-top d-flex gap-2">
        <button class="btn btn-outline-primary btn-sm flex-grow-1" @onclick="() => OnEditEntity.InvokeAsync(Entity)" @onclick:stopPropagation="true">@L["EditButton"]</button>
        <button class="btn btn-outline-danger btn-sm flex-grow-1" @onclick="() => OnDeleteEntity.InvokeAsync(Entity)" @onclick:stopPropagation="true">@L["DeleteButton"]</button>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public EntityDto Entity { get; set; } = null!;

    [Parameter]
    public EventCallback<EntityDto> OnSelectEntity { get; set; }

    [Parameter]
    public EventCallback<EntityDto> OnDeleteEntity { get; set; }

    [Parameter]
    public EventCallback<EntityDto> OnEditEntity { get; set; }

    [Parameter]
    public bool IsSelected { get; set; }
}