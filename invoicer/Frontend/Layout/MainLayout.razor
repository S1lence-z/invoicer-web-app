@inherits LayoutComponentBase
@using Frontend.Services
@using Frontend.Utils
@using Frontend.Components
@inject LoadingService LoadingService
@inject ErrorService ErrorService

<div class="page">
    <div class="sidebar w-auto">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 gap-4">
            <CulturePicker />
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About ASP.NET</a>
        </div>

        <article class="content px-4">
            @if (LoadingService.IsLoading)
            {
                <div class="spinner-overlay">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            @Body
        </article>
    </main>
</div>

@* ERROR MESSAGE MODAL *@
<Modal Title="Error" IsVisible="ErrorService.EmittedError" OnClose="ErrorService.ClearError">
    <div class="alert alert-danger" role="alert">
        @ErrorService.ErrorMessage
    </div>
    <button class="btn btn-primary" @onclick="ErrorService.ClearError">Close</button>
</Modal>

@code {
    private void LoadingStateChanged(object? sender, EventArgs e)
    {
        StateHasChanged();
    }

    private void ErrorStateChanged(object? sender, EventArgs e)
    {
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        LoadingService.OnLoadingStateChanged += LoadingStateChanged;
        ErrorService.OnErrorStateChanged += ErrorStateChanged;
    }

    public void Dispose()
    {
        LoadingService.OnLoadingStateChanged -= LoadingStateChanged;
        ErrorService.OnErrorStateChanged -= ErrorStateChanged;
    }
}