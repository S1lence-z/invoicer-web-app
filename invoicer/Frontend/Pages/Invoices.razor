@page "/invoices";
@using Domain.Models
@using Domain.ServiceInterfaces
@using Frontend.Components;
@inject IInvoiceService invoiceService;

@* PAGE CONTAINER *@
<div class="d-flex flex-column border rounded-3">
    @* HEADER *@
    <div class="d-flex justify-content-between align-items-center px-4 pt-4">
        <h3 class="fw-bold">Invoices</h3>
        <button class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> Add New Invoice
        </button>
    </div>
    <hr />
    @* CONTENT *@
    <div class="d-flex flex-column pb-4">
        @* FILTER AND SEARCH BAR *@
        <div class="card border-0 mx-4">
            <div class="row g-2">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search invoices..." />
                        <button class="btn btn-outline-primary">
                            <i class="bi bi-search"></i> Search
                        </button>
                    </div>
                </div>
                <div class="col-md-3">
                    <select class="form-select">
                        <option value="all">All</option>
                        <option value="paid">Paid</option>
                        <option value="unpaid">Unpaid</option>
                    </select>
                </div>
            </div>
        </div>
        <hr/>
        @* LIST HEADER *@
        <div class="card border-1 shadow-sm mx-4">
            <div class="card-body d-flex justify-content-between align-items-center">
                <div>Invoice Number</div>
                <div>Buyer</div>
                <div>Seller</div>
                <div>Due Date</div>
                <div>Total</div>
            </div>
        </div>
        @* INVOICES LIST *@
        <div class="d-flex flex-column overflow-auto px-4 mt-2">
            @if (allInvoices is null)
            {
                <p>Loading...</p>
            }
            else if (allInvoices.Count == 0)
            {
                <p>No invoices found</p>
            }
            else
            {
                @foreach (var invoice in allInvoices)
                {
                    <InvoiceListItem Invoice="invoice" />
                }
            }
        </div>
    </div>
</div>

@code {
    private IList<Invoice> allInvoices = new List<Invoice>();
    private Invoice? selectedInvoice = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadInvoices();
    }

    private async Task LoadInvoices()
    {
        try
        {
            allInvoices = (await invoiceService.GetAllAsync()).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
