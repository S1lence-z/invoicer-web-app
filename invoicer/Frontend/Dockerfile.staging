# Frontend/Dockerfile.staging
ARG DOTNET_VERSION=8.0

# --- Build Stage ---
FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_VERSION} AS build
ARG BUILD_CONFIGURATION=Release # Added this, assuming you want Release for staging
WORKDIR /src

# Copy .csproj files and restore as distinct layers
COPY ["Frontend/Frontend.csproj", "Frontend/"]
COPY ["Application/Application.csproj", "Application/"]
COPY ["Domain/Domain.csproj", "Domain/"]
RUN dotnet restore "Frontend/Frontend.csproj"

# Copy the rest of the application code
COPY . .

# Set WORKDIR to where Frontend.csproj is
WORKDIR "/src/Frontend"
# Publish the Blazor WASM app. This will create Frontend.dll and wwwroot in /app/publish
RUN dotnet publish "Frontend.csproj" -c $BUILD_CONFIGURATION -o /app/publish --no-restore # Use $BUILD_CONFIGURATION

# --- Final Stage ---
FROM mcr.microsoft.com/dotnet/aspnet:${DOTNET_VERSION} AS final
WORKDIR /app

# COPY ALL content from the /app/publish directory of the build stage
# This will create /app/Frontend.dll and /app/wwwroot/ (and its contents)
COPY --from=build /app/publish .

EXPOSE 5000
ENV ASPNETCORE_URLS=http://+:5000

ENTRYPOINT ["dotnet", "Frontend.dll"]